name: Dependabot

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  pull-requests: write
  contents: write
  issues: write
  repository-projects: write

jobs:
  auto-approve-dependabot:
    name: Auto-approve dependabot
    continue-on-error: true
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.3.0
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Add a production label
        continue-on-error: true
        if: ${{ steps.metadata.outputs.dependency-type == 'direct:production' }}
        run: gh label create "production" -f -c "#ffa500" --repo ${{ github.repository }}
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a label for all production dependencies
        continue-on-error: true
        if: ${{ steps.metadata.outputs.dependency-type == 'direct:production' }}
        run: gh pr edit "$PR_URL" --add-label "production"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a development label
        continue-on-error: true
        if: ${{ steps.metadata.outputs.dependency-type == 'direct:development' }}
        run: gh label create "development" -f -c "#00a5ff" --repo ${{ github.repository }}
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a label for all development dependencies
        continue-on-error: true
        if: ${{ steps.metadata.outputs.dependency-type == 'direct:development' }}
        run: gh pr edit "$PR_URL" --add-label "development"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a major label
        continue-on-error: true
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-major' }}
        run: gh label create "major" -f -c "#ff0000" --repo ${{ github.repository }}
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a label for all major updates
        continue-on-error: true
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-major' }}
        run: gh pr edit "$PR_URL" --add-label "major"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a minor label
        continue-on-error: true
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh label create "minor" -f -c "#ff0000" --repo ${{ github.repository }}
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a label for all minor updates
        continue-on-error: true
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr edit "$PR_URL" --add-label "minor"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a patch label
        continue-on-error: true
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        run: gh label create "patch" -f -c "#ff0000" --repo ${{ github.repository }}
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add a label for all patch updates
        continue-on-error: true
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        run: gh pr edit "$PR_URL" --add-label "patch"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Github Actions Approve PR
        if: ${{ steps.metadata.outputs.update-type != 'version-update:semver-major' }}
        continue-on-error: true
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-merge-pull-request:
    name: Auto-merge pull request
    continue-on-error: true
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    steps:
      - name: Enable auto-merge for this PR
        continue-on-error: true
        run: gh pr merge --auto --${{ 'rebase' }} "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
